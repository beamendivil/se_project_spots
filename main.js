!function(){"use strict";function e(e,t,a){const r=e.querySelector(`#${t.id}-error`);r&&(r.textContent="",r.classList.remove(a.errorClass),t.classList.remove(a.inputErrorClass))}function t(e,t,a){!function(e){return e.some(e=>!e.validity.valid)}(e)?(t.classList.remove(a.inactiveButtonClass),t.disabled=!1):(t.classList.add(a.inactiveButtonClass),t.disabled=!0)}function a(a,r){const n=Array.from(a.querySelectorAll(r.inputSelector)),o=a.querySelector(r.submitButtonSelector);n.forEach(t=>{e(a,t,r)}),t(n,o,r)}function r(e,t){a(e,t),e.reset()}const n="Server error. Please try again later.",o=".modal__submit-btn",s="#edit-modal",i="#add-card-modal",l="#preview-modal",c="#avatar-modal",d="#confirm-modal",u="#profile-name-input",m="#profile-description-input",h="#add-card-name-input",p="#add-card-link-input",f="#avatar-link-input",_="Creating...",v="Create",g="Deleting...",b=new class{constructor({baseUrl:e,headers:t}){this._baseUrl=e,this._headers=t}_checkResponse(e){return e.ok?e.json():e.json().then(t=>{const a=t.message||`Error: ${e.status}`;return Promise.reject({status:e.status,message:a})}).catch(()=>Promise.reject({status:e.status,message:e.statusText||`Error: ${e.status}`}))}_request(e,t){return fetch(e,t).then(this._checkResponse)}getUserInfo(){return this._request(`${this._baseUrl}/users/me`,{headers:this._headers})}updateUserInfo(e){return this._request(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify(e)})}updateAvatar(e){return this._request(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify(e)})}getInitialCards(){return this._request(`${this._baseUrl}/cards`,{headers:this._headers})}addCard(e){return this._request(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify(e)})}deleteCard(e){return this._request(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers})}addLike(e){return this._request(`${this._baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this._headers})}removeLike(e){return this._request(`${this._baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this._headers})}changeLikeCardStatus(e,t){return t?this.removeLike(e):this.addLike(e)}getAppInfo(){return Promise.all([this.getUserInfo(),this.getInitialCards()])}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"12c3a7ea-f9fe-4d1a-b905-983f501aca74","Content-Type":"application/json"}}),y=[{name:"Val Thorens",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/spots/1-photo-by-moritz-feldmann-from-pexels.jpg"},{name:"Restaurant terrace",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/spots/2-photo-by-ceiline-from-pexels.jpg"},{name:"An outdoor cafe",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/spots/3-photo-by-tubanur-dogan-from-pexels.jpg"},{name:"A very long bridge, over the forest and through the trees",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/spots/4-photo-by-maurice-laschet-from-pexels.jpg"},{name:"Tunnel with morning light",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/spots/5-photo-by-van-anh-nguyen-from-pexels.jpg"},{name:"Mountain house",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/spots/6-photo-by-moritz-feldmann-from-pexels.jpg"}];function k(e){if("Escape"===e.key){const e=document.querySelector(".modal_opened");e&&Z(e)}}function S(e,t,a="Saving...",r="Save"){e?(t.textContent=a,t.disabled=!0):(t.textContent=r,t.disabled=!1)}function L(e){if(console.error("API Error:",e),e.status)switch(e.status){case 400:alert("Please check your input and try again.");break;case 401:alert("Authentication failed. Please log in again.");break;case 404:alert("Resource not found.");break;case 500:alert(n);break;default:alert(e.message||n)}else alert("Network error. Please check your connection.")}function C(e){const t=document.querySelector(e);return t||console.warn(`Element not found: ${e}`),t}const q={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__submit-btn",inactiveButtonClass:"modal__submit-btn_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"};var E;E=q,Array.from(document.querySelectorAll(E.formSelector)).forEach(a=>{!function(a,r){const n=Array.from(a.querySelectorAll(r.inputSelector)),o=a.querySelector(r.submitButtonSelector);t(n,o,r),n.forEach(s=>{s.addEventListener("input",()=>{!function(t,a,r){a.validity.valid?e(t,a,r):function(e,t,a,r){const n=e.querySelector(`#${t.id}-error`);n&&(n.textContent=a,n.classList.add(r.errorClass),t.classList.add(r.inputErrorClass))}(t,a,a.validationMessage,r)}(a,s,r),t(n,o,r)})})}(a,E)});const w=C(".cards__list"),A=C("#card-template")?.content.querySelector(".card"),U=C(".profile__edit-btn"),x=C(".profile__add-btn"),$=C(".profile__avatar-edit-btn"),j=C(s),D=C(i),P=C(l),z=C(c),I=C(d),T=C(`${s} .modal__form`),N=C(`${i} .modal__form`),B=C(`${c} .modal__form`),R=T?.querySelector(u),O=T?.querySelector(m),H=C(".profile__name"),J=C(".profile__description"),M=C(".profile__avatar"),F=N?.querySelector(h),W=N?.querySelector(p),Y=B?.querySelector(f),V=P?.querySelector(".modal__image"),G=P?.querySelector(".modal__caption");function K(){if(!ne)return;const{cardData:e,cardElement:t}=ne,a=I.querySelector(o);S(!0,a,g,"Yes"),b.deleteCard(e._id).then(()=>{t.remove(),Z(I),ne=null}).catch(L).finally(()=>{S(!1,a,g,"Yes")})}function Q(e,t){console.log("Creating card with data:",e);const a=A.cloneNode(!0),r=a.querySelector(".card__image"),n=a.querySelector(".card__title"),o=a.querySelector(".card__like-btn"),s=a.querySelector(".card__delete-btn");return r.src=e.link,r.alt=e.name,n.textContent=e.name,console.log("Setting image src to:",e.link),e.isLiked&&o.classList.add("card__like-btn_liked"),o.addEventListener("click",()=>function(e,t){const a=t.classList.contains("card__like-btn_liked");b.changeLikeCardStatus(e._id,a).then(a=>{t.classList.toggle("card__like-btn_liked"),e.isLiked=a.isLiked}).catch(L)}(e,o)),s.addEventListener("click",()=>function(e,t){ne={cardData:e,cardElement:t},X(I)}(e,a)),r.addEventListener("click",()=>function(e){V.src=e.link,V.alt=e.name,G.textContent=e.name,X(P)}(e)),a}function X(e){e.classList.add("modal_opened"),document.addEventListener("keydown",k)}function Z(e){e.classList.remove("modal_opened"),document.removeEventListener("keydown",k)}function ee(e){e.preventDefault();const t=e.target.querySelector(o),a=R.value.trim(),r=O.value.trim();""!==a&&""!==r?(S(!0,t),b.updateUserInfo({name:a,about:r}).then(e=>{H.textContent=e.name,J.textContent=e.about,re=e,Z(j)}).catch(L).finally(()=>{S(!1,t)})):alert("Both name and description must be filled out.")}function te(e){e.preventDefault();const t=e.target.querySelector(o),a=F.value.trim(),n=W.value.trim();""!==a&&""!==n?(S(!0,t,_,v),b.addCard({name:a,link:n}).then(e=>{console.log("New card received from API:",e);const t=Q(e,re._id);w.prepend(t),N.reset(),r(N,q),Z(D)}).catch(L).finally(()=>{S(!1,t,_,v)})):alert("Both name and link must be filled out.")}function ae(e){e.preventDefault();const t=e.target.querySelector(o),a=Y.value.trim();""!==a?(S(!0,t),b.updateAvatar({avatar:a}).then(e=>{oe(e.avatar,e.name||"User Avatar"),re=e,B.reset(),r(B,q),Z(z)}).catch(L).finally(()=>{S(!1,t)})):alert("Avatar link must be filled out.")}let re=null,ne=null;function oe(e,t="User Avatar"){if(!M)return void console.warn("profileAvatar element not found");if(!e||""===e.trim())return void console.log("No avatar URL provided, keeping current avatar");const a=M.src;e.startsWith("./"),console.log("Current avatar src:",a),console.log("New avatar URL:",e),e===a||a.endsWith(e)?console.log("Avatar already set to this URL, skipping"):(console.log("Setting avatar to:",e),M.src=e,M.alt=t,M.onerror=function(){console.warn("Avatar failed to load, using fallback"),this.src="images/avatar.jpg",this.alt="Default Avatar",this.onerror=null})}function se(){console.log("Initializing app..."),b.getAppInfo().then(([e,t])=>{console.log("User data received:",e),re=e,H.textContent=e.name||"User Name",J.textContent=e.about||"User Description",e.avatar&&!e.avatar.includes("practicum-content.s3.amazonaws.com")?oe(e.avatar,e.name||"User Avatar"):console.log("Using default avatar (no custom avatar or placeholder detected)"),ie(t)}).catch(e=>{console.error("Failed to initialize app:",e),oe("./images/avatar.jpg","Default Avatar"),H.textContent="User Name",J.textContent="User Description",ie(y)})}function ie(e){const t=document.createDocumentFragment();e.forEach(e=>{const a=Q(e,re&&re._id);t.appendChild(a)}),w.innerHTML="",w.appendChild(t)}se(),se(),function(){N?.addEventListener("submit",te),T?.addEventListener("submit",ee),B?.addEventListener("submit",ae);const e=I?.querySelector(o),t=I?.querySelector(".modal__cancel-btn");e?.addEventListener("click",K),t?.addEventListener("click",()=>{Z(I),ne=null}),U?.addEventListener("click",()=>{a(T,q),re?(R.value=re.name,O.value=re.about||""):(R.value=H.textContent,O.value=J.textContent),X(j)}),x?.addEventListener("click",()=>{r(N,q),X(D)}),$?.addEventListener("click",()=>{r(B,q),X(z)}),document.querySelectorAll(".modal__close-btn").forEach(e=>{e.addEventListener("click",()=>{const t=e.closest(".modal");Z(t),t===I&&(ne=null)})}),document.querySelectorAll(".modal").forEach(e=>{e.addEventListener("click",t=>{t.target===e&&(Z(e),e===I&&(ne=null))})})}()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,